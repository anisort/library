spring.application.name=books
server.port=9090

# Resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}

# Database configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}

api.seeding.url=${BOOKS_API_SEEDING_URL}

spring.ai.vectorstore.pgvector.index-type=hnsw
spring.ai.vectorstore.pgvector.distance-type=cosine_distance
spring.ai.vectorstore.pgvector.initialize-schema=false
spring.main.allow-bean-definition-overriding=true

# CORS configuration
cors.frontend-url-proxy=${FRONTEND_URL_PROXY}
cors.frontend-url-host=${FRONTEND_URL_HOST}
cors.frontend-url-container=${FRONTEND_URL_CONTAINER}

# GCP Storage configuration
gcp.bucket.name=${GCP_STORAGE_BUCKET_NAME}

# GCP Embeddings configuration
spring.ai.vertex.ai.embedding.project-id=${GCP_PROJECT_ID}
spring.ai.vertex.ai.embedding.location=${GCP_LOCATION}
spring.ai.vertex.ai.embedding.text.options.model=${GCP_EMBEDDING_MODEL}



