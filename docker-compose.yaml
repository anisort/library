services:
  auth:
    build:
      context: .
      dockerfile: dockerfiles/auth.Dockerfile
    container_name: auth-app
    depends_on:
      - pg-auth
    environment:
      - SPRING_DATASOURCE_URL=$DATASOURCE_AUTH_URL
      - SPRING_DATASOURCE_USERNAME=$DB_USER
      - SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=$SPRING_JPA_HIBERNATE_DDL_AUTO
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=$SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
      - ISSUER_URI=$ISSUER_URI
      - CLIENT_ID=$CLIENT_ID
      - CLIENT_SECRET=$CLIENT_SECRET
      - REDIRECT_URI=$REDIRECT_URI
      - FRONTEND_URL_PROXY=$FRONTEND_URL_PROXY
      - FRONTEND_URL_HOST=$FRONTEND_URL_HOST
      - FRONTEND_URL_CONTAINER=$FRONTEND_URL_CONTAINER
      - GOOGLE_OAUTH2_CLIENT_ID=$GOOGLE_OAUTH2_CLIENT_ID
      - GOOGLE_OAUTH2_CLIENT_SECRET=$GOOGLE_OAUTH2_CLIENT_SECRET
      - GOOGLE_OAUTH2_SCOPE=$GOOGLE_OAUTH2_SCOPE
      - GOOGLE_OAUTH2_REDIRECT_URI=$GOOGLE_OAUTH2_REDIRECT_URI
      - GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS
    volumes:
      - ./secrets/credentials.json:/secrets/credentials.json:ro
    ports:
      - "8080:8080"
    networks:
      - lib-network

  books:
    build:
      context: .
      dockerfile: dockerfiles/books.Dockerfile
    container_name: books-app
    depends_on:
      - pg-books
      - auth
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=$ISSUER_URI
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=$JWK_SET_URI
      - SPRING_DATASOURCE_URL=$DATASOURCE_BOOKS_URL
      - SPRING_DATASOURCE_USERNAME=$DB_USER
      - SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=$SPRING_JPA_HIBERNATE_DDL_AUTO
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=$SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
      - FRONTEND_URL_PROXY=$FRONTEND_URL_PROXY
      - FRONTEND_URL_HOST=$FRONTEND_URL_HOST
      - FRONTEND_URL_CONTAINER=$FRONTEND_URL_CONTAINER
      - BOOKS_API_SEEDING_URL=$BOOKS_API_SEEDING_URL
      - GCP_PROJECT_ID=$GCP_PROJECT_ID
      - GCP_LOCATION=$GCP_LOCATION
      - GCP_EMBEDDING_MODEL=$GCP_EMBEDDING_MODEL
      - GCP_STORAGE_BUCKET_NAME=$GCP_STORAGE_BUCKET_NAME_BOOKS
      - GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS
    volumes:
      - ./secrets/credentials.json:/secrets/credentials.json:ro
    ports:
      - "9090:9090"
    networks:
      - lib-network

  assistant:
    build:
      context: .
      dockerfile: dockerfiles/assistant.Dockerfile
    container_name: assistant-books-app
    depends_on:
      - pg-books
      - pg-assistant
      - auth
      - books
    environment:
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=$ISSUER_URI
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=$JWK_SET_URI
      - SPRING_MAIN_DATASOURCE_URL=$DATASOURCE_ASSISTANT_URL
      - SPRING_VECTOR_DATASOURCE_URL=$DATASOURCE_BOOKS_URL
      - SPRING_DATASOURCE_USERNAME=$DB_USER
      - SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=$SPRING_JPA_HIBERNATE_DDL_AUTO
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=$SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
      - GCP_PROJECT_ID=$GCP_PROJECT_ID
      - GCP_LOCATION=$GCP_LOCATION
      - GCP_EMBEDDING_MODEL=$GCP_EMBEDDING_MODEL
      - GCP_GEMINI_MODEL=$GCP_GEMINI_MODEL
      - FRONTEND_URL_PROXY=$FRONTEND_URL_PROXY
      - FRONTEND_URL_HOST=$FRONTEND_URL_HOST
      - FRONTEND_URL_CONTAINER=$FRONTEND_URL_CONTAINER
      - GCP_STORAGE_BUCKET_NAME=$GCP_STORAGE_BUCKET_NAME_ASSISTANT
      - GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS
    volumes:
      - ./secrets/credentials.json:/secrets/credentials.json:ro
    ports:
      - "7070:7070"
    networks:
      - lib-network

  frontend:
    build:
      context: .
      dockerfile: dockerfiles/angular.Dockerfile
    container_name: angular-app
    depends_on:
      - auth
      - books
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    command: [ "npm", "run", "start", "--", "--host", "0.0.0.0" ]
    networks:
      - lib-network

  pg-auth:
    image: postgres
    container_name: libdb-auth
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_AUTH_DATABASE
    ports:
      - "5435:5432"
    volumes:
      - pg-data-auth:/var/lib/postgresql/data
    networks:
      - lib-network

  pg-books:
    image: 'pgvector/pgvector:pg16'
    container_name: libdb-books
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_BOOKS_DATABASE
    ports:
      - "5436:5432"
    volumes:
      - pg-data-books:/var/lib/postgresql/data
    networks:
      - lib-network

  pg-assistant:
    image: postgres
    container_name: libdb-assistant
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_ASSISTANT_DATABASE
    ports:
      - "5437:5432"
    volumes:
      - pg-data-assistant:/var/lib/postgresql/data
    networks:
      - lib-network

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - auth
      - frontend
      - books
    networks:
      - lib-network

volumes:
  pg-data-auth:
  pg-data-books:
  pg-data-assistant:

networks:
  lib-network: